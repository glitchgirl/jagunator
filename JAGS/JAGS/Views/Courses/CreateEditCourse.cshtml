@model CourseInfo

@{
    ViewData["Title"] = "Create/Edit Course";
    if (ViewBag.sessiontype == "Admin")
    {
        Layout = "_Layout";
    }
    else if (ViewBag.sessiontype == "Editor")
    {
        Layout = "_LayoutEditor";
    }
    else if (ViewBag.sessiontype == "Viewer")
    {
        Layout = "_LayoutViewer";
    }
}
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Http;
@using System.Linq;
@using System.Collections.Generic;

<hr />
<h2>@ViewBag.Title</h2>
<hr />
@if (ViewBag.sessiontype == "Admin" || ViewBag.sessiontype == "Editor")
{
<form>
    <fieldset>
        <div class="row">
            <div class="col-lg-12 text-center"><h3>Course Information</h3></div>
        </div>
        <br />
        <div class="row">
            <label for="Course" class="col-md-3 text-right">Course Subject</label>
            <div class="col-md-3" id="CECourseSubject">
                @Html.TextBoxFor(a => a.CourseSubject, new { @id = "textSubjectID", @class = "hidden" })
                @Html.ValidationMessageFor(a => a.CourseSubject, null, new { @class = "text-danger" })
                @Html.DropDownListFor(a => a.CourseSubject, new SelectList(Model.SubjectList, "Value", "Text"), "Select Subject", new { @id = "subjectID", @class = "form-control" })
            </div>
            <label for="CourseName" class="col-md-3 text-right">Course Name</label>
            <div class="col-md-3" id="CECourseName">
                @Html.TextBoxFor(a => a.CourseName, new { @id = "CourseNameID", @class = "form-control" })
            </div>
        </div>

        <div class="row">
        </div>
        <br />
        <div class="row">
            <label for="CourseIDDD" class="col-md-3 text-right">Course ID</label>
            <div class="col-md-3" id="CECourseSubject">
                @Html.DropDownListFor(a => a.CourseIDDummy, new SelectList(Model.CourseList, "Value", "Text"), "Select ID", new { @class = "form-control", @id = "CourseListID" })
            </div>



            <label for="CourseIDText" class="col-md-3 text-right">Course ID</label>
            <div class="col-md-3" id="CECourseIDText">
                @Html.TextBoxFor(Model => Model.CourseID, new { @class = "form-control", @id = "CourseIDText" })
            </div>
        </div>

        <br />
        <div class="row">
            <label for="CourseCreditHours" class="col-md-3 text-right">Credit Hours</label>
            <div class="col-md-3" id="CECourseCredit">
                @Html.TextBoxFor(a => a.CreditHours, new { @id = "CreditHours", @class = "hidden" })
                @Html.DropDownListFor(a => a.CreditHours, new SelectList(Model.CourseCreditList, "Value", "Text"), "Select Credit Hours", new { @class = "form-control", @id = "CourseCreditHours" })
            </div>

            <label for="CrossList" class="col-md-3 text-right">Cross-List</label>
            <div class="col-md-3" id="CrossListWith">
                @Html.TextBoxFor(a => a.CrossListWith, new { @class = "form-control", @id = "CrossListText" })
            </div>
        </div>

        <br />
        <div class="row">
            <input type="submit" name="command" value="Save Course" formaction=@Url.Action("CreateEditCourse") formmethod="post" class="btn btn-primary" />
            <input type="submit" name="command" value="Delete Course" formaction=@Url.Action("CreateEditCourse") formmethod="post" class="btn btn-primary" />

        </div>
        <br /><br />
        <!-------------------------------------PAGE SEPARATION BREAK--------------------------------------->


        <div class="row">
            <div class="col-lg-12 text-center"><h3>Section Information</h3></div>
        </div>

        <div class="row">
            <label for="Semester" class="col-md-3 text-right">Semester</label>
            <div class="col-md-3" id="Semester">
                @Html.TextBoxFor(a => a.sectionSemester, new { @id = "sectionSemester", @class = "hidden" })
                @Html.DropDownListFor(a => a.sectionSemester, new SelectList(Model.Semester, "Value", "Text"), "Select Semester", new { @class = "form-control", @id = "SemesterSelection" })
            </div>
            <label for="CampusLocation" class="col-md-3 text-right">Campus Location</label>
            <div class="col-md-3" id="CECampus">
                @Html.TextBoxFor(a => a.CampusLocation, new { @id = "CampusLocation", @class = "hidden" })
                @Html.DropDownListFor(a => a.CampusLocation, new SelectList(Model.CampusNames, "Value", "Text"), "Select Campus", new { @class = "form-control", @id = "CampusSelection" })
            </div>
        </div>
        <br />
        <div class="row">
            <label for="Section" class="col-md-3 text-right">Section</label>
            <div class="col-md-3" id="sectionDropDown">
                @Html.DropDownListFor(a => a.CourseSectionList, new SelectList(Model.CourseSectionList, "Value", "Text"), "Select Section", new { @class = "form-control", @id = "SectionSelection" })
            </div>
            <label for="SectionText" class="col-md-3 text-right">Section</label>
            <div class="col-md-3" id="SectionText1">
                @Html.TextBoxFor(a => a.CourseSection, new { @class = "form-control", @id = "SectionText" })
            </div>
        </div>
        <br />
        <div class="row">
            <label for="InstructorName" class="col-md-3 text-right">Instructor Name</label>
            <div class="col-md-3" id="CEInstructorName">
                @Html.TextBoxFor(a => a.InstructorName, new { @id = "InstructorName", @class = "hidden" })
                @Html.DropDownListFor(a => a.InstructorName, new SelectList(Model.ListOfInstructors, "Value", "Text"), "Select Instructor", new { @class = "form-control", @id = "InstructorSelection" })
            </div>
            <label for="ScheduleType" class="col-md-3 text-right">Schedule Type</label>
            <div class="col-md-3" id="CEScheduleTpye">
                @Html.TextBoxFor(a => a.ScheduleAtt, new { @id = "ScheduleAtt", @class = "hidden" })
                @Html.DropDownListFor(a => a.ScheduleAtt, new SelectList(Model.ScheduleType, "Value", "Text"), "Select Schedule Type", new { @class = "form-control", @id = "ScheduleSelection" })
            </div>
        </div>
        <br />
        <div class="row">
            <label for="ClassRoomSize" class="col-md-3 text-right">Classroom Size</label>
            <div class="col-md-3" id="CRSize">
                @Html.TextBoxFor(a => a.ClassroomSize, new { @id = "ClassroomSizeText", @class = "form-control" })
            </div>
            <label for="ClassRoomType" class="col-md-3 text-right">Classroom Type</label>
            <div class="col-md-3" id="CRType">
                @Html.TextBoxFor(a => a.ClassroomType, new { @id = "ClassroomTypeText", @class = "hidden" })
                @Html.DropDownListFor(a => a.ClassroomType, new SelectList(Model.ClassroomTypeList, "Value", "Text"), "Select Classroom Type", new { @class = "form-control", @id = "ClassroomType" })
            </div>
        </div>

        <br />

        <br />
        <input type="submit" name="command" value="Save Section" formaction=@Url.Action("CreateEditCourse") formmethod="post" class="btn btn-primary" />
        <input type="submit" name="command" value="Delete Section" formaction=@Url.Action("CreateEditCourse") formmethod="post" class="btn btn-primary" />


    </fieldset>
</form>
}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
<!--         <script src="~/js/LoadCourse.js" type="text/javascript"></script>  -->

<script type="text/javascript">
    $(function () {
        $('#subjectID').change(function () {
            $('#CourseNameID').val("");
            $('#CourseCreditHours').val("").attr('selected', false);
            $('#CourseIDText').val("");
            $('#CrossListText').val("");
            var val = ($("#subjectID option:selected").text());
            var subItems = "<option value='0'>" + 'Select Course ID' + '</option>';

            $.getJSON("@Url.Action("GetCourses","Courses")", { id: val }, function (res) {
                $.each(res.data.items, function (index, item) {
                    subItems += "<option value='" + item.value + "'>" + item.text + "</option>"

                });

                $("#CourseListID").html(subItems);
            });

            if ($('#subjectID option:selected').text() !== 'Select Subject') {
                var selected = $('#subjectID option:selected').text();
                $('#textSubjectID').val(selected);
            }
        });


        $('#CourseCreditHours').change(function () {
            if ($('#CourseCreditHours option:selected').text() !== 'Select Credit Hours') {
                var selected = $('#CourseCreditHours option:selected').text();
                $('#CreditHours').val(selected);
            }
        });

        $('#CourseListID').change(function () {
            if ($('#CourseListID option:selected').text() !== 'Select Course ID') {
                var selected = $("#subjectID option:selected").text() + "_" + $('#CourseListID option:selected').text();
                $.post("@Url.Action("GetCourseValues", "Courses")?val=" + selected, function (res) {
                    if (res.success === "true")
                    {
                        $('#CourseNameID').val(res.data.courseName);
                        $('#CourseCreditHours').val(res.data.courseCredit - 1).attr('selected', true);
                        $('#CourseIDText').val(res.data.courseID);
                        $('#CreditHours').val(res.data.courseCredit);
                        $('#CrossListText').val(res.data.crossList);
                    }
                })
            }
            else
            {
                $('#CourseNameID').val("");
                $('#CourseCreditHours').val("").attr('selected', false);
                $('#CourseIDText').val("");
                $('#CrossListText').val("");
            }
        });


        $('#SemesterSelection').change(function () {
            var val = ($("#SemesterSelection option:selected").text())
                + "?"
                + ($("#subjectID option:selected").text())
                + "_"
                + ($('#CourseIDText').val());
            var subItems = "<option value='0'>" + 'Select Section' + '</option>';

            if ($('#SemesterSelection option:selected').text() !== 'Select Semester') {
                $.getJSON("@Url.Action("GetSections","Courses")", { id: val }, function (res) {
                    $.each(res.data.items, function (index, item) {
                        subItems += "<option value='" + item.value + "'>" + item.text + "</option>"

                    });

                    $("#SectionSelection").html(subItems);
                });
            }
            if ($('#SemesterSelection option:selected').text() !== 'Select Semester') {
                var selected = $('#SemesterSelection option:selected').text();
                $('#sectionSemester').val(selected);
            }
            else
            { 
                $('#SectionText').val("");
                $('#ClassroomSizeText').val("");
                $('#ClassroomSizeType').val("");
                $('#sectionSemester').val("");
                $('#CampusLocation').val("");
                $('#ScheduleAtt').val("");
                $('#InstructorName').val("");
                $('#SectionSelection').val("").attr('selected', true);
                $('#CampusSelection').val('').attr('selected', true);
                $('#InstructorSelection').val('').attr('selected', true);
                $('#ScheduleSelection').val('').attr('selected', true);
                $('#ClassroomType').val('').attr('selected', true);
                $('#InstructorSelection').val("").attr('selected', true);
            }

        });

        $('#InstructorSelection').change(function () {
            if ($('#InstructorSelection option:selected').text() !== 'Select Instructor') {
                var selected = $('#InstructorSelection option:selected').text();
                $('#InstructorName').val(selected);
            }

        });

        $('#ScheduleSelection').change(function () {

            if ($('#ScheduleSelection option:selected').text() !== 'Select Schedule Type') {
                var selected = $('#ScheduleSelection option:selected').text();
                $('#ScheduleAtt').val(selected);
            }
        });

        $('#CampusSelection').change(function () {

            if ($('#CampusSelection option:selected').text() !== 'Select Campus') {
                var selected = $('#CampusSelection option:selected').text();
                $('#CampusLocation').val(selected);
            }
        });

        $('#SectionSelection').change(function ()
        {
            if ($('#SectionSelection option:selected').text() !== 'Select Section') {
                $.post("@Url.Action("GetSectionValues", "Courses")?val="
                    + $('#SemesterSelection option:selected').text()
                    + "/"
                    + $('#textSubjectID').val()
                    + "_"
                    + $('#CourseIDText').val()
                    + "_"
                    + $('#SectionSelection option:selected').text(), function (res) {
                        if (res.success === "true") {
                            $('#CourseNameID').val(res.data.courseName);
                            $('#CourseCreditHours').val(res.data.courseCredit - 1).attr('selected', true);
                            $('#CourseIDText').val(res.data.courseID);
                            $('#CreditHours').val(res.data.courseCredit);
                            $('#CrossListText').val(res.data.crossList);
                            $('#SectionText').val(res.data.courseSection);
                            $('#ClassroomSizeText').val(res.data.sectionClassroomSize);
                            $('#ClassroomTypeText').val(res.data.sectionClassroomType);
                            $('#ScheduleAtt').val(res.data.sectionScheduleType);
                            $('#CampusLocation').val(res.data.sectionCampus);
                            $('#InstructorName').val(res.data.sectionInstructor);


                            var ddlArray = new Array();
                            var ddl = document.getElementById('ClassroomType');
                            for (i = 0; i < ddl.options.length; i++) {
                                ddlArray[i] = ddl.options[i].text;
                            }
                            for (i = 1; i < ddlArray.length; i++) {
                                if (ddlArray[i] === res.data.sectionClassroomType) {
                                    $('#ClassroomType').val(i - 1).attr('selected', true);
                                }
                            }
                            ddl = document.getElementById('InstructorSelection');
                            for (i = 0; i < ddl.options.length; i++) {
                                ddlArray[i] = ddl.options[i].text;
                            }
                            for (i = 1; i < ddlArray.length; i++) {
                                if (ddlArray[i] === res.data.sectionInstructor) {
                                    $('#InstructorSelection').val(i - 1).attr('selected', true);
                                }
                            }
                            ddl = document.getElementById('CampusSelection');
                            for (i = 0; i < ddl.options.length; i++) {
                                ddlArray[i] = ddl.options[i].text;
                            }
                            for (i = 1; i < ddlArray.length; i++) {
                                if (ddlArray[i] === res.data.sectionCampus) {
                                    $('#CampusSelection').val(i - 1).attr('selected', true);
                                }
                            }
                            ddl = document.getElementById('ScheduleSelection');
                            for (i = 0; i < ddl.options.length; i++) {
                                ddlArray[i] = ddl.options[i].text;
                            }
                            for (i = 1; i < ddlArray.length; i++) {
                                if (ddlArray[i] === res.data.sectionScheduleType) {
                                    $('#ScheduleSelection').val(i - 1).attr('selected', true);
                                }
                            }

                        }
                        var selected = $('#SectionSelection option:selected').text();
                        $('#SectionText').val(selected);
                    }
                )
            }
            else
            {
                $('#SectionText').val("");
                $('#ClassroomSizeText').val("");
                $('#ClassroomSizeType').val("");
                $('#sectionSemester').val("");
                $('#CampusLocation').val("");
                $('#ScheduleAtt').val("");
                $('#InstructorName').val("");
                $('#CampusSelection').val('').attr('selected', true);
                $('#InstructorSelection').val('').attr('selected', true);
                $('#ScheduleSelection').val('').attr('selected', true);
                $('#ClassroomType').val('').attr('selected', true);
                $('#InstructorSelection').val("").attr('selected', true);
            }

        });

        $('#ClassroomType').change(function () {
            if ($('#ClassroomType option:selected').text() !== 'Select Classroom Type') {
                var selected = $('#ClassroomType option:selected').text();
                $('#ClassroomTypeText').val(selected);
            }
        });

    });



</script>